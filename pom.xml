<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

	<!-- The Basics -->
	<version>0.0.1-SNAPSHOT</version>
	<groupId>shkim.abcdsee</groupId>
	<artifactId>qaboard</artifactId>
	<packaging>war</packaging>
	<name>abcdsee</name>

	<!-- Specify hard-coded project properties here -->
	<properties>
		<maven.compile.source>1.6</maven.compile.source>
		<maven.compile.target>1.6</maven.compile.target>
		<maven.compile.optimize>true</maven.compile.optimize>
		<maven.compile.deprecation>true</maven.compile.deprecation>
		<http.proxyHost />
		<http.proxyPort />
		<maven.test.skip>true</maven.test.skip>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<org.springframework.version>3.0.4.RELEASE</org.springframework.version>
		<appengine.applicationid>abcdsee</appengine.applicationid>
		<devappserver.address>localhost</devappserver.address>
		<devappserver.port>8088</devappserver.port>
		
		<!--
			Sets the project's default encoding.
			http://docs.codehaus.org/display/MAVENUSER/POM+Element+for+Source+File+Encoding
		-->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!--
			This is just for "eclipse:eclipse" goal to always attempt downloading
			sources
		-->
		<downloadSources>true</downloadSources>

		<!--
			Specify AppEngine version for your project. It should match SDK
			version pointed to by ${gae.home} property (Typically, one used by
			your Eclipse plug-in)
		-->
		<gae.version>1.4.3</gae.version>
		<gae.home>/Users/shkim/App/appengine-java-sdk</gae.home>
		
		<!--
			Upload to http://test.latest.<applicationName>.appspot.com by default
		-->
		<gae.application.version>test</gae.application.version>
		
		<datanucleus.version>1.1.5</datanucleus.version>
	</properties>
	
	<repositories>
		<repository>
			<id>jboss-public-repository-group</id>
			<name>JBoss Public Maven Repository Group</name>
			<url>https://repository.jboss.org/nexus/content/groups/public/</url>
			<layout>default</layout>
			<releases>
				<enabled>true</enabled>
				<updatePolicy>never</updatePolicy>
			</releases>
		</repository>

<!--		<repository>
			<id>objectify-appengine</id>
			<url>http://objectify-appengine.googlecode.com/svn/maven</url>
		</repository>-->

	</repositories>
	
	<dependencies>

		<!-- Google App Engine meta-package -->
		<dependency>
		  <groupId>net.kindleit</groupId>
		  <artifactId>gae-runtime</artifactId>
		  <version>${gae.version}</version>
		  <type>pom</type>
		</dependency>

		<dependency>
			<groupId>org.datanucleus</groupId>
			<artifactId>datanucleus-core</artifactId>
			<version>${datanucleus.version}</version>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>javax.transaction</groupId>
			<artifactId>jta</artifactId>
			<version>1.1</version>
		</dependency>

		<!--
			J2EE Servlet API. We need it to compile IndexServlet class. You can
			probably remove it, if you don't explicitly use Servlets
		-->
		<dependency>
			<groupId>org.apache.geronimo.specs</groupId>
			<artifactId>geronimo-servlet_2.5_spec</artifactId>
			<version>1.2</version>
			<scope>provided</scope>
		</dependency>

		<!--
			Make use of JSP tags. Remove, if you don't use JSPs
		-->
		<dependency>
			<artifactId>standard</artifactId>
			<groupId>taglibs</groupId>
			<version>1.1.2</version>
			<type>jar</type>
		</dependency>

		<!-- These dependencies are here just for enabling logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.6.1</version>
		</dependency>

		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>0.9.24</version>
		</dependency>

		<!--
			GAE libraries for local testing as described here:
			http://code.google.com/appengine/docs/java/howto/unittesting.html
		-->
		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-api-labs</artifactId>
			<version>${gae.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-api-stubs</artifactId>
			<version>${gae.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-testing</artifactId>
			<version>${gae.version}</version>
			<scope>test</scope>
		</dependency>

<!--		<dependency>
			<groupId>com.googlecode.objectify</groupId>
			<artifactId>objectify</artifactId>
			<version>3.0</version>
		</dependency>-->

		<dependency>
			<groupId>javax.jdo</groupId>
			<artifactId>jdo2-api</artifactId>
			<version>2.3-eb</version>
			<exclusions>
				<exclusion>
					<groupId>javax.transaction</groupId>
					<artifactId>transaction-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>1.6.4</version>
		</dependency>
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib</artifactId>
			<version>2.2</version>
		</dependency>
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.2.1</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>1.4</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>tomcat-servlet-api</artifactId>
			<version>7.0.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<version>1.5.8</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.1.2</version>
		</dependency> 		

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.1</version>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<!--
				This plug-in "enhances" your domain model objects (i.e. makes them
				persistent for datanucleus)
			-->
			<plugin>
				<groupId>org.datanucleus</groupId>
				<artifactId>maven-datanucleus-plugin</artifactId>
				<version>1.1.4</version>
				<configuration>
					<!--
						Make sure this path contains your persistent classes!
					-->
					<mappingIncludes>**/model/*.class</mappingIncludes>
					<verbose>true</verbose>
					<enhancerName>ASM</enhancerName>
					<api>JDO</api>
				</configuration>
				<executions>
					<execution>
						<phase>compile</phase>
						<goals>
							<goal>enhance</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>org.datanucleus</groupId>
						<artifactId>datanucleus-core</artifactId>
						<version>${datanucleus.version}</version>
						<exclusions>
							<exclusion>
								<groupId>javax.transaction</groupId>
								<artifactId>transaction-api</artifactId>
							</exclusion>
						</exclusions>
					</dependency>
					<dependency>
						<groupId>org.datanucleus</groupId>
						<artifactId>datanucleus-rdbms</artifactId>
						<version>${datanucleus.version}</version>
					</dependency>
					<dependency>
						<groupId>org.datanucleus</groupId>
						<artifactId>datanucleus-enhancer</artifactId>
						<version>1.1.4</version>
					</dependency>
					<dependency>
						<groupId>javax.jdo</groupId>
						<artifactId>jdo2-api</artifactId>
						<version>2.3-ec</version>
						<scope>runtime</scope>
					</dependency>
				</dependencies>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.1-beta-1</version>
				<configuration>
					<webResources>
						<resource>
							<directory>src/main/webapp</directory>
							<filtering>true</filtering>
							<includes>
								<include>**/appengine-web.xml</include>
							</includes>
						</resource>
					</webResources>
				</configuration>
			</plugin>

			<!--
				The actual maven-gae-plugin. Type "mvn gae:run" to run project, "mvn
				gae:deploy" to upload to GAE.
			-->
			<plugin>
				<groupId>net.kindleit</groupId>
				<artifactId>maven-gae-plugin</artifactId>
				<version>0.8.4</version>
				<dependencies>
					<dependency>
						<groupId>net.kindleit</groupId>
						<artifactId>gae-runtime</artifactId>
						<version>${gae.version}</version>
						<type>pom</type>
					</dependency>
				</dependencies>
			</plugin>

			<!--
				Upload application to the appspot automatically, during
				release:perform
			-->
			<plugin>
				<artifactId>maven-release-plugin</artifactId>
				<configuration>
					<goals>gae:deploy</goals>
				</configuration>
			</plugin>

			<!-- Java compiler version -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>
					<source>${maven.compile.source}</source>
					<target>${maven.compile.target}</target>
					<webResources>
						<resource>
							<directory>src/main/appengine</directory>
							<targetPath>WEB-INF/</targetPath>
							<filtering>true</filtering>
						</resource>
					</webResources>
				</configuration>
			</plugin>

<!--			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.8.1</version>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.surefire</groupId>
						<artifactId>surefire-testng</artifactId>
						<version>2.8.1</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<id>integration</id>
						<phase>integration-test</phase>
						<goals>
							<goal>test</goal>
						</goals>
						<configuration>
							<argLine>-Xmx512m -Xms256m -Djava.awt.headless=true -XX:MaxPermSize=256m -Xss256k</argLine>
							<parallel>tests</parallel>
							<threadCount>5</threadCount>
<!- - note that the groups/excluded groups don't work due to some problem
in surefire or testng. instead, we have to exclude via file path
							<groups>integration</groups>
							<excludedGroups>unit,performance,live</excludedGroups> - ->
							<excludes>
								<exclude>**/*LiveTest.java</exclude>
							</excludes>
							<includes>
								<include>**/*IntegrationTest.java</include>
							</includes>

							<systemProperties>
								<property>
									<name>devappserver.address</name>
									<value>${devappserver.address}</value>
								</property>
								<property>
									<name>devappserver.port</name>
									<value>${devappserver.port}</value>
								</property>
								<property>
									<name>warfile</name>
									<value>${project.build.directory}/${project.artifactId}</value>
								</property>
							</systemProperties>
							<additionalClasspathElements>
								<additionalClasspathElement>${env.APPENGINE_HOME}/lib/appengine-tools-api.jar</additionalClasspathElement>
							</additionalClasspathElements>
							<environmentVariables>
								<DEBUG>true</DEBUG>
								<SDK_BIN>${env.APPENGINE_HOME}/bin</SDK_BIN>
								<SDK_LIB>${env.APPENGINE_HOME}/lib</SDK_LIB>
								<SDK_CONFIG>${env.APPENGINE_HOME}/config/sdk</SDK_CONFIG>
							</environmentVariables>
						</configuration>
					</execution>
				</executions>
			</plugin>			
-->			
			
			
			
		</plugins>
	</build>


	<profiles>
		<!--
			We can configure our integration server to activate this profile and
			perform gae:deploy, thus uploading latest snapshot to the
			http://1.latest.<applicationName>.appspot.com automatically
		-->
		<profile>
			<id>integration-build</id>
			<properties>
				<gae.application.version>stage</gae.application.version>
			</properties>
		</profile>

		<!--
			This profile will activate automatically during release and upload
			application to the http://2.latest.<applicationName>.appspot.com (We
			might want to set the 2nd version as our applications Default version
			to be accessible at http://<applicationName>.appspot.com)
		-->
		<profile>
			<id>release-build</id>
			<activation>
				<property>
					<name>performRelease</name>
					<value>true</value>
				</property>
			</activation>

			<properties>
				<!--
					During release, set application version in appengine-web.xml to 2
				-->
				<gae.application.version>release</gae.application.version>
			</properties>
		</profile>
	</profiles>

</project>
